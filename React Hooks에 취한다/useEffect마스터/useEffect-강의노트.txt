# useEffect 

=> 컴포넌트의 상태에 따라서 ~~~
    ~~~> Mount 되었을 떄 == 화면에 첫 렌더링
    ~~~> Update 되었을 때 == 다시 렌더링
    ~~~> Unmount 되었을 때 == 화면에서 사라질 때 

    위와 같이 특정 작업에 따라서 처리할 코드를 실행하고 싶을 때 사용하는 것이 바로바로!
    ==>>> useEffect 이다 !!!


=> 콜백함수
    : useEffect는 인자로 콜백함수를 받는다.
    
    -> 콜백함수란 ?
        : 다른 함수의 인자로 전달된 함수를 의미한다.

    useEffect(() => { //원하는 작업을 넣어주는 공간})


=> useEffect 사용법 !
    01. 콜백함수만을 인자로 받을 경우
        -> 컨포넌트가 rendering 될 때마다 매번 콜백함수가 실행
            ex)
                컨포넌트가 처음에 rendering될때 + 업데이트 될 때 


    02. 콜백함수 + [value== 배열]을 인자로 받을 경우        //이때 배열 == dependecy array라 부르기도 함.
        -> 화면에 첫 렌더링이 될 때 콜백함수 실행
        -> value의 값이 변경될 경우 실행

        -> 빈 배열이 rendering될 경우 == 화면에 맨 처음 렌더링 될때만 실행된다!!!
    

=> clean up 정리 !
    : useEffect의 return 값에 함수를 넣어줌으로써, 정리 작업을 해줄 수 있다!!!

        ex)
            유튭 구독 신청을 했을 경우 -----> 구독 해제를 해주는 정리 작업 필요
            타이머가 돌 경우    -----> 타이머를 멈추는 정리 작업 필요
            이벤트 리스너를 등록했을 경우   -----> 등록한 리스너를 제거해주는 정리작업 필요

